
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009ec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  000009ec  00000a80  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  0080007a  0080007a  00000a9a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a9a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000acc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  00000b08  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f17  00000000  00000000  00000ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b85  00000000  00000000  00002bb7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d68  00000000  00000000  0000373c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000324  00000000  00000000  000044a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005a2  00000000  00000000  000047c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001089  00000000  00000000  00004d6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00005df3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 63 01 	jmp	0x2c6	; 0x2c6 <__vector_2>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ee       	ldi	r30, 0xEC	; 236
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 37       	cpi	r26, 0x7A	; 122
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e7       	ldi	r26, 0x7A	; 122
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 38       	cpi	r26, 0x82	; 130
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <main>
  8a:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Button_Init>:
#include "DIO.h"

extern TRAFFIC_MODE mode;
extern long long j ;

void Button_Init(uint8_t Port , uint8_t Pin){
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	c8 2f       	mov	r28, r24
  98:	d6 2f       	mov	r29, r22
	DIO_SetPinDir(Port, Pin,DIO_PIN_INPUT);
  9a:	40 e0       	ldi	r20, 0x00	; 0
  9c:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
	DIO_SetPullUp(Port,Pin);
  a0:	6d 2f       	mov	r22, r29
  a2:	8c 2f       	mov	r24, r28
  a4:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_SetPullUp>
}
  a8:	df 91       	pop	r29
  aa:	cf 91       	pop	r28
  ac:	08 95       	ret

000000ae <Button_Pressed>:

void Button_Pressed(void){
    if(mode!=Pedestrian)
  ae:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <mode>
  b2:	88 30       	cpi	r24, 0x08	; 8
  b4:	81 f0       	breq	.+32     	; 0xd6 <Button_Pressed+0x28>
    j=0;
  b6:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
  ba:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  be:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
  c2:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
  c6:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
  ca:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
  ce:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
  d2:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
    mode=Pedestrian;
  d6:	88 e0       	ldi	r24, 0x08	; 8
  d8:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <mode>
  dc:	08 95       	ret

000000de <DIO_SetPinDir>:
		break;
		case DIO_PORTB: TOGGLE_BIT(PORTB,Pin);
		break;
		case DIO_PORTC: TOGGLE_BIT(PORTC,Pin);
		break;
		case DIO_PORTD: TOGGLE_BIT(PORTD,Pin);
  de:	44 23       	and	r20, r20
  e0:	b9 f1       	breq	.+110    	; 0x150 <DIO_SetPinDir+0x72>
  e2:	41 30       	cpi	r20, 0x01	; 1
  e4:	09 f0       	breq	.+2      	; 0xe8 <DIO_SetPinDir+0xa>
  e6:	6b c0       	rjmp	.+214    	; 0x1be <DIO_SetPinDir+0xe0>
  e8:	81 30       	cpi	r24, 0x01	; 1
  ea:	89 f0       	breq	.+34     	; 0x10e <DIO_SetPinDir+0x30>
  ec:	28 f0       	brcs	.+10     	; 0xf8 <DIO_SetPinDir+0x1a>
  ee:	82 30       	cpi	r24, 0x02	; 2
  f0:	c9 f0       	breq	.+50     	; 0x124 <DIO_SetPinDir+0x46>
  f2:	83 30       	cpi	r24, 0x03	; 3
  f4:	11 f1       	breq	.+68     	; 0x13a <DIO_SetPinDir+0x5c>
  f6:	08 95       	ret
  f8:	2a b3       	in	r18, 0x1a	; 26
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	02 c0       	rjmp	.+4      	; 0x104 <DIO_SetPinDir+0x26>
 100:	88 0f       	add	r24, r24
 102:	99 1f       	adc	r25, r25
 104:	6a 95       	dec	r22
 106:	e2 f7       	brpl	.-8      	; 0x100 <DIO_SetPinDir+0x22>
 108:	82 2b       	or	r24, r18
 10a:	8a bb       	out	0x1a, r24	; 26
 10c:	08 95       	ret
 10e:	27 b3       	in	r18, 0x17	; 23
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	02 c0       	rjmp	.+4      	; 0x11a <DIO_SetPinDir+0x3c>
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	6a 95       	dec	r22
 11c:	e2 f7       	brpl	.-8      	; 0x116 <DIO_SetPinDir+0x38>
 11e:	82 2b       	or	r24, r18
 120:	87 bb       	out	0x17, r24	; 23
 122:	08 95       	ret
 124:	24 b3       	in	r18, 0x14	; 20
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	02 c0       	rjmp	.+4      	; 0x130 <DIO_SetPinDir+0x52>
 12c:	88 0f       	add	r24, r24
 12e:	99 1f       	adc	r25, r25
 130:	6a 95       	dec	r22
 132:	e2 f7       	brpl	.-8      	; 0x12c <DIO_SetPinDir+0x4e>
 134:	82 2b       	or	r24, r18
 136:	84 bb       	out	0x14, r24	; 20
 138:	08 95       	ret
 13a:	21 b3       	in	r18, 0x11	; 17
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	02 c0       	rjmp	.+4      	; 0x146 <DIO_SetPinDir+0x68>
 142:	88 0f       	add	r24, r24
 144:	99 1f       	adc	r25, r25
 146:	6a 95       	dec	r22
 148:	e2 f7       	brpl	.-8      	; 0x142 <DIO_SetPinDir+0x64>
 14a:	82 2b       	or	r24, r18
 14c:	81 bb       	out	0x11, r24	; 17
 14e:	08 95       	ret
 150:	81 30       	cpi	r24, 0x01	; 1
 152:	91 f0       	breq	.+36     	; 0x178 <DIO_SetPinDir+0x9a>
 154:	28 f0       	brcs	.+10     	; 0x160 <DIO_SetPinDir+0x82>
 156:	82 30       	cpi	r24, 0x02	; 2
 158:	d9 f0       	breq	.+54     	; 0x190 <DIO_SetPinDir+0xb2>
 15a:	83 30       	cpi	r24, 0x03	; 3
 15c:	29 f1       	breq	.+74     	; 0x1a8 <DIO_SetPinDir+0xca>
 15e:	08 95       	ret
 160:	2a b3       	in	r18, 0x1a	; 26
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_SetPinDir+0x8e>
 168:	88 0f       	add	r24, r24
 16a:	99 1f       	adc	r25, r25
 16c:	6a 95       	dec	r22
 16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_SetPinDir+0x8a>
 170:	80 95       	com	r24
 172:	82 23       	and	r24, r18
 174:	8a bb       	out	0x1a, r24	; 26
 176:	08 95       	ret
 178:	27 b3       	in	r18, 0x17	; 23
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <DIO_SetPinDir+0xa6>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <DIO_SetPinDir+0xa2>
 188:	80 95       	com	r24
 18a:	82 23       	and	r24, r18
 18c:	87 bb       	out	0x17, r24	; 23
 18e:	08 95       	ret
 190:	24 b3       	in	r18, 0x14	; 20
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	02 c0       	rjmp	.+4      	; 0x19c <DIO_SetPinDir+0xbe>
 198:	88 0f       	add	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	6a 95       	dec	r22
 19e:	e2 f7       	brpl	.-8      	; 0x198 <DIO_SetPinDir+0xba>
 1a0:	80 95       	com	r24
 1a2:	82 23       	and	r24, r18
 1a4:	84 bb       	out	0x14, r24	; 20
 1a6:	08 95       	ret
 1a8:	21 b3       	in	r18, 0x11	; 17
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <DIO_SetPinDir+0xd6>
 1b0:	88 0f       	add	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	6a 95       	dec	r22
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <DIO_SetPinDir+0xd2>
 1b8:	80 95       	com	r24
 1ba:	82 23       	and	r24, r18
 1bc:	81 bb       	out	0x11, r24	; 17
 1be:	08 95       	ret

000001c0 <DIO_SetPinVal>:
 1c0:	44 23       	and	r20, r20
 1c2:	b9 f1       	breq	.+110    	; 0x232 <DIO_SetPinVal+0x72>
 1c4:	41 30       	cpi	r20, 0x01	; 1
 1c6:	09 f0       	breq	.+2      	; 0x1ca <DIO_SetPinVal+0xa>
 1c8:	6b c0       	rjmp	.+214    	; 0x2a0 <DIO_SetPinVal+0xe0>
 1ca:	81 30       	cpi	r24, 0x01	; 1
 1cc:	89 f0       	breq	.+34     	; 0x1f0 <DIO_SetPinVal+0x30>
 1ce:	28 f0       	brcs	.+10     	; 0x1da <DIO_SetPinVal+0x1a>
 1d0:	82 30       	cpi	r24, 0x02	; 2
 1d2:	c9 f0       	breq	.+50     	; 0x206 <DIO_SetPinVal+0x46>
 1d4:	83 30       	cpi	r24, 0x03	; 3
 1d6:	11 f1       	breq	.+68     	; 0x21c <DIO_SetPinVal+0x5c>
 1d8:	08 95       	ret
 1da:	2b b3       	in	r18, 0x1b	; 27
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <DIO_SetPinVal+0x26>
 1e2:	88 0f       	add	r24, r24
 1e4:	99 1f       	adc	r25, r25
 1e6:	6a 95       	dec	r22
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <DIO_SetPinVal+0x22>
 1ea:	82 2b       	or	r24, r18
 1ec:	8b bb       	out	0x1b, r24	; 27
 1ee:	08 95       	ret
 1f0:	28 b3       	in	r18, 0x18	; 24
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <DIO_SetPinVal+0x3c>
 1f8:	88 0f       	add	r24, r24
 1fa:	99 1f       	adc	r25, r25
 1fc:	6a 95       	dec	r22
 1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <DIO_SetPinVal+0x38>
 200:	82 2b       	or	r24, r18
 202:	88 bb       	out	0x18, r24	; 24
 204:	08 95       	ret
 206:	25 b3       	in	r18, 0x15	; 21
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	02 c0       	rjmp	.+4      	; 0x212 <DIO_SetPinVal+0x52>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	6a 95       	dec	r22
 214:	e2 f7       	brpl	.-8      	; 0x20e <DIO_SetPinVal+0x4e>
 216:	82 2b       	or	r24, r18
 218:	85 bb       	out	0x15, r24	; 21
 21a:	08 95       	ret
 21c:	22 b3       	in	r18, 0x12	; 18
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	02 c0       	rjmp	.+4      	; 0x228 <DIO_SetPinVal+0x68>
 224:	88 0f       	add	r24, r24
 226:	99 1f       	adc	r25, r25
 228:	6a 95       	dec	r22
 22a:	e2 f7       	brpl	.-8      	; 0x224 <DIO_SetPinVal+0x64>
 22c:	82 2b       	or	r24, r18
 22e:	82 bb       	out	0x12, r24	; 18
 230:	08 95       	ret
 232:	81 30       	cpi	r24, 0x01	; 1
 234:	91 f0       	breq	.+36     	; 0x25a <DIO_SetPinVal+0x9a>
 236:	28 f0       	brcs	.+10     	; 0x242 <DIO_SetPinVal+0x82>
 238:	82 30       	cpi	r24, 0x02	; 2
 23a:	d9 f0       	breq	.+54     	; 0x272 <DIO_SetPinVal+0xb2>
 23c:	83 30       	cpi	r24, 0x03	; 3
 23e:	29 f1       	breq	.+74     	; 0x28a <DIO_SetPinVal+0xca>
 240:	08 95       	ret
 242:	2b b3       	in	r18, 0x1b	; 27
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_SetPinVal+0x8e>
 24a:	88 0f       	add	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	6a 95       	dec	r22
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_SetPinVal+0x8a>
 252:	80 95       	com	r24
 254:	82 23       	and	r24, r18
 256:	8b bb       	out	0x1b, r24	; 27
 258:	08 95       	ret
 25a:	28 b3       	in	r18, 0x18	; 24
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	02 c0       	rjmp	.+4      	; 0x266 <DIO_SetPinVal+0xa6>
 262:	88 0f       	add	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	6a 95       	dec	r22
 268:	e2 f7       	brpl	.-8      	; 0x262 <DIO_SetPinVal+0xa2>
 26a:	80 95       	com	r24
 26c:	82 23       	and	r24, r18
 26e:	88 bb       	out	0x18, r24	; 24
 270:	08 95       	ret
 272:	25 b3       	in	r18, 0x15	; 21
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	02 c0       	rjmp	.+4      	; 0x27e <DIO_SetPinVal+0xbe>
 27a:	88 0f       	add	r24, r24
 27c:	99 1f       	adc	r25, r25
 27e:	6a 95       	dec	r22
 280:	e2 f7       	brpl	.-8      	; 0x27a <DIO_SetPinVal+0xba>
 282:	80 95       	com	r24
 284:	82 23       	and	r24, r18
 286:	85 bb       	out	0x15, r24	; 21
 288:	08 95       	ret
 28a:	22 b3       	in	r18, 0x12	; 18
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	02 c0       	rjmp	.+4      	; 0x296 <DIO_SetPinVal+0xd6>
 292:	88 0f       	add	r24, r24
 294:	99 1f       	adc	r25, r25
 296:	6a 95       	dec	r22
 298:	e2 f7       	brpl	.-8      	; 0x292 <DIO_SetPinVal+0xd2>
 29a:	80 95       	com	r24
 29c:	82 23       	and	r24, r18
 29e:	82 bb       	out	0x12, r24	; 18
 2a0:	08 95       	ret

000002a2 <DIO_SetPullUp>:
		break;
	}
}

void DIO_SetPullUp(uint8_t Port , uint8_t Pin)
{
 2a2:	08 95       	ret

000002a4 <EXI_SetCallBack>:
		
		ClEAR_BIT(MCUCR,ISC2);
		
		#elif EXTENAL_INT2_TRIGGER == INT2_TRIGGER_RISING_EDGE
		
		SET_BIT(MCUCR,ISC2);
 2a4:	08 95       	ret

000002a6 <SET_GlobalInterrupt>:
 2a6:	8f b7       	in	r24, 0x3f	; 63
 2a8:	80 68       	ori	r24, 0x80	; 128
 2aa:	8f bf       	out	0x3f, r24	; 63
 2ac:	08 95       	ret

000002ae <EXTERNAL_INT1_Init>:
 2ae:	0e 94 53 01 	call	0x2a6	; 0x2a6 <SET_GlobalInterrupt>
 2b2:	8b b7       	in	r24, 0x3b	; 59
 2b4:	80 68       	ori	r24, 0x80	; 128
 2b6:	8b bf       	out	0x3b, r24	; 59
 2b8:	85 b7       	in	r24, 0x35	; 53
 2ba:	88 60       	ori	r24, 0x08	; 8
 2bc:	85 bf       	out	0x35, r24	; 53
 2be:	85 b7       	in	r24, 0x35	; 53
 2c0:	8b 7f       	andi	r24, 0xFB	; 251
 2c2:	85 bf       	out	0x35, r24	; 53
 2c4:	08 95       	ret

000002c6 <__vector_2>:
		#endif
		
}


 ISR(INT1_vect){
 2c6:	1f 92       	push	r1
 2c8:	0f 92       	push	r0
 2ca:	0f b6       	in	r0, 0x3f	; 63
 2cc:	0f 92       	push	r0
 2ce:	11 24       	eor	r1, r1
 2d0:	2f 93       	push	r18
 2d2:	3f 93       	push	r19
 2d4:	4f 93       	push	r20
 2d6:	5f 93       	push	r21
 2d8:	6f 93       	push	r22
 2da:	7f 93       	push	r23
 2dc:	8f 93       	push	r24
 2de:	9f 93       	push	r25
 2e0:	af 93       	push	r26
 2e2:	bf 93       	push	r27
 2e4:	ef 93       	push	r30
 2e6:	ff 93       	push	r31
   {
	   INT1_Fptr();
   }
   */
  //LED_TurnOn(LED_BLUE);
  Button_Pressed();
 2e8:	0e 94 57 00 	call	0xae	; 0xae <Button_Pressed>
}
 2ec:	ff 91       	pop	r31
 2ee:	ef 91       	pop	r30
 2f0:	bf 91       	pop	r27
 2f2:	af 91       	pop	r26
 2f4:	9f 91       	pop	r25
 2f6:	8f 91       	pop	r24
 2f8:	7f 91       	pop	r23
 2fa:	6f 91       	pop	r22
 2fc:	5f 91       	pop	r21
 2fe:	4f 91       	pop	r20
 300:	3f 91       	pop	r19
 302:	2f 91       	pop	r18
 304:	0f 90       	pop	r0
 306:	0f be       	out	0x3f, r0	; 63
 308:	0f 90       	pop	r0
 30a:	1f 90       	pop	r1
 30c:	18 95       	reti

0000030e <LCD_WriteCommand>:
{
uint8_t pos[2] = {0x80 , 0xC0};

LCD_WriteCommand(pos[row]+col);

}
 30e:	cf 93       	push	r28
 310:	c8 2f       	mov	r28, r24
 312:	40 e0       	ldi	r20, 0x00	; 0
 314:	63 e0       	ldi	r22, 0x03	; 3
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 31c:	8f e9       	ldi	r24, 0x9F	; 159
 31e:	9f e0       	ldi	r25, 0x0F	; 15
 320:	01 97       	sbiw	r24, 0x01	; 1
 322:	f1 f7       	brne	.-4      	; 0x320 <LCD_WriteCommand+0x12>
 324:	00 c0       	rjmp	.+0      	; 0x326 <LCD_WriteCommand+0x18>
 326:	00 00       	nop
 328:	c4 fb       	bst	r28, 4
 32a:	44 27       	eor	r20, r20
 32c:	40 f9       	bld	r20, 0
 32e:	60 e0       	ldi	r22, 0x00	; 0
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 336:	c5 fb       	bst	r28, 5
 338:	44 27       	eor	r20, r20
 33a:	40 f9       	bld	r20, 0
 33c:	61 e0       	ldi	r22, 0x01	; 1
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 344:	c6 fb       	bst	r28, 6
 346:	44 27       	eor	r20, r20
 348:	40 f9       	bld	r20, 0
 34a:	62 e0       	ldi	r22, 0x02	; 2
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 352:	4c 2f       	mov	r20, r28
 354:	44 1f       	adc	r20, r20
 356:	44 27       	eor	r20, r20
 358:	44 1f       	adc	r20, r20
 35a:	64 e0       	ldi	r22, 0x04	; 4
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 362:	8f e9       	ldi	r24, 0x9F	; 159
 364:	9f e0       	ldi	r25, 0x0F	; 15
 366:	01 97       	sbiw	r24, 0x01	; 1
 368:	f1 f7       	brne	.-4      	; 0x366 <LCD_WriteCommand+0x58>
 36a:	00 c0       	rjmp	.+0      	; 0x36c <LCD_WriteCommand+0x5e>
 36c:	00 00       	nop
 36e:	41 e0       	ldi	r20, 0x01	; 1
 370:	62 e0       	ldi	r22, 0x02	; 2
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 378:	8f e9       	ldi	r24, 0x9F	; 159
 37a:	9f e0       	ldi	r25, 0x0F	; 15
 37c:	01 97       	sbiw	r24, 0x01	; 1
 37e:	f1 f7       	brne	.-4      	; 0x37c <LCD_WriteCommand+0x6e>
 380:	00 c0       	rjmp	.+0      	; 0x382 <LCD_WriteCommand+0x74>
 382:	00 00       	nop
 384:	40 e0       	ldi	r20, 0x00	; 0
 386:	62 e0       	ldi	r22, 0x02	; 2
 388:	80 e0       	ldi	r24, 0x00	; 0
 38a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 38e:	8f e9       	ldi	r24, 0x9F	; 159
 390:	9f e0       	ldi	r25, 0x0F	; 15
 392:	01 97       	sbiw	r24, 0x01	; 1
 394:	f1 f7       	brne	.-4      	; 0x392 <LCD_WriteCommand+0x84>
 396:	00 c0       	rjmp	.+0      	; 0x398 <LCD_WriteCommand+0x8a>
 398:	00 00       	nop
 39a:	4c 2f       	mov	r20, r28
 39c:	41 70       	andi	r20, 0x01	; 1
 39e:	60 e0       	ldi	r22, 0x00	; 0
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 3a6:	c1 fb       	bst	r28, 1
 3a8:	44 27       	eor	r20, r20
 3aa:	40 f9       	bld	r20, 0
 3ac:	61 e0       	ldi	r22, 0x01	; 1
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 3b4:	c2 fb       	bst	r28, 2
 3b6:	44 27       	eor	r20, r20
 3b8:	40 f9       	bld	r20, 0
 3ba:	62 e0       	ldi	r22, 0x02	; 2
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 3c2:	c3 fb       	bst	r28, 3
 3c4:	44 27       	eor	r20, r20
 3c6:	40 f9       	bld	r20, 0
 3c8:	64 e0       	ldi	r22, 0x04	; 4
 3ca:	81 e0       	ldi	r24, 0x01	; 1
 3cc:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 3d0:	8f e9       	ldi	r24, 0x9F	; 159
 3d2:	9f e0       	ldi	r25, 0x0F	; 15
 3d4:	01 97       	sbiw	r24, 0x01	; 1
 3d6:	f1 f7       	brne	.-4      	; 0x3d4 <LCD_WriteCommand+0xc6>
 3d8:	00 c0       	rjmp	.+0      	; 0x3da <LCD_WriteCommand+0xcc>
 3da:	00 00       	nop
 3dc:	41 e0       	ldi	r20, 0x01	; 1
 3de:	62 e0       	ldi	r22, 0x02	; 2
 3e0:	80 e0       	ldi	r24, 0x00	; 0
 3e2:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 3e6:	8f e9       	ldi	r24, 0x9F	; 159
 3e8:	9f e0       	ldi	r25, 0x0F	; 15
 3ea:	01 97       	sbiw	r24, 0x01	; 1
 3ec:	f1 f7       	brne	.-4      	; 0x3ea <LCD_WriteCommand+0xdc>
 3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <LCD_WriteCommand+0xe2>
 3f0:	00 00       	nop
 3f2:	40 e0       	ldi	r20, 0x00	; 0
 3f4:	62 e0       	ldi	r22, 0x02	; 2
 3f6:	80 e0       	ldi	r24, 0x00	; 0
 3f8:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 3fc:	8f e1       	ldi	r24, 0x1F	; 31
 3fe:	9e e4       	ldi	r25, 0x4E	; 78
 400:	01 97       	sbiw	r24, 0x01	; 1
 402:	f1 f7       	brne	.-4      	; 0x400 <__EEPROM_REGION_LENGTH__>
 404:	00 c0       	rjmp	.+0      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 406:	00 00       	nop
 408:	cf 91       	pop	r28
 40a:	08 95       	ret

0000040c <LCD_Init>:
 40c:	41 e0       	ldi	r20, 0x01	; 1
 40e:	63 e0       	ldi	r22, 0x03	; 3
 410:	80 e0       	ldi	r24, 0x00	; 0
 412:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
 416:	41 e0       	ldi	r20, 0x01	; 1
 418:	62 e0       	ldi	r22, 0x02	; 2
 41a:	80 e0       	ldi	r24, 0x00	; 0
 41c:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
 420:	41 e0       	ldi	r20, 0x01	; 1
 422:	60 e0       	ldi	r22, 0x00	; 0
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
 42a:	41 e0       	ldi	r20, 0x01	; 1
 42c:	61 e0       	ldi	r22, 0x01	; 1
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
 434:	41 e0       	ldi	r20, 0x01	; 1
 436:	62 e0       	ldi	r22, 0x02	; 2
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
 43e:	41 e0       	ldi	r20, 0x01	; 1
 440:	64 e0       	ldi	r22, 0x04	; 4
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
 448:	8f e9       	ldi	r24, 0x9F	; 159
 44a:	9f e0       	ldi	r25, 0x0F	; 15
 44c:	01 97       	sbiw	r24, 0x01	; 1
 44e:	f1 f7       	brne	.-4      	; 0x44c <LCD_Init+0x40>
 450:	00 c0       	rjmp	.+0      	; 0x452 <LCD_Init+0x46>
 452:	00 00       	nop
 454:	88 e2       	ldi	r24, 0x28	; 40
 456:	0e 94 87 01 	call	0x30e	; 0x30e <LCD_WriteCommand>
 45a:	8f e9       	ldi	r24, 0x9F	; 159
 45c:	9f e0       	ldi	r25, 0x0F	; 15
 45e:	01 97       	sbiw	r24, 0x01	; 1
 460:	f1 f7       	brne	.-4      	; 0x45e <LCD_Init+0x52>
 462:	00 c0       	rjmp	.+0      	; 0x464 <LCD_Init+0x58>
 464:	00 00       	nop
 466:	81 e0       	ldi	r24, 0x01	; 1
 468:	0e 94 87 01 	call	0x30e	; 0x30e <LCD_WriteCommand>
 46c:	8f e9       	ldi	r24, 0x9F	; 159
 46e:	9f e0       	ldi	r25, 0x0F	; 15
 470:	01 97       	sbiw	r24, 0x01	; 1
 472:	f1 f7       	brne	.-4      	; 0x470 <LCD_Init+0x64>
 474:	00 c0       	rjmp	.+0      	; 0x476 <LCD_Init+0x6a>
 476:	00 00       	nop
 478:	8f e0       	ldi	r24, 0x0F	; 15
 47a:	0e 94 87 01 	call	0x30e	; 0x30e <LCD_WriteCommand>
 47e:	8f e9       	ldi	r24, 0x9F	; 159
 480:	9f e0       	ldi	r25, 0x0F	; 15
 482:	01 97       	sbiw	r24, 0x01	; 1
 484:	f1 f7       	brne	.-4      	; 0x482 <LCD_Init+0x76>
 486:	00 c0       	rjmp	.+0      	; 0x488 <LCD_Init+0x7c>
 488:	00 00       	nop
 48a:	08 95       	ret

0000048c <LCD_WriteChar>:
 48c:	cf 93       	push	r28
 48e:	c8 2f       	mov	r28, r24
 490:	41 e0       	ldi	r20, 0x01	; 1
 492:	63 e0       	ldi	r22, 0x03	; 3
 494:	80 e0       	ldi	r24, 0x00	; 0
 496:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 49a:	8f e9       	ldi	r24, 0x9F	; 159
 49c:	9f e0       	ldi	r25, 0x0F	; 15
 49e:	01 97       	sbiw	r24, 0x01	; 1
 4a0:	f1 f7       	brne	.-4      	; 0x49e <LCD_WriteChar+0x12>
 4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <LCD_WriteChar+0x18>
 4a4:	00 00       	nop
 4a6:	c4 fb       	bst	r28, 4
 4a8:	44 27       	eor	r20, r20
 4aa:	40 f9       	bld	r20, 0
 4ac:	60 e0       	ldi	r22, 0x00	; 0
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 4b4:	c5 fb       	bst	r28, 5
 4b6:	44 27       	eor	r20, r20
 4b8:	40 f9       	bld	r20, 0
 4ba:	61 e0       	ldi	r22, 0x01	; 1
 4bc:	81 e0       	ldi	r24, 0x01	; 1
 4be:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 4c2:	c6 fb       	bst	r28, 6
 4c4:	44 27       	eor	r20, r20
 4c6:	40 f9       	bld	r20, 0
 4c8:	62 e0       	ldi	r22, 0x02	; 2
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 4d0:	4c 2f       	mov	r20, r28
 4d2:	44 1f       	adc	r20, r20
 4d4:	44 27       	eor	r20, r20
 4d6:	44 1f       	adc	r20, r20
 4d8:	64 e0       	ldi	r22, 0x04	; 4
 4da:	81 e0       	ldi	r24, 0x01	; 1
 4dc:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 4e0:	8f e9       	ldi	r24, 0x9F	; 159
 4e2:	9f e0       	ldi	r25, 0x0F	; 15
 4e4:	01 97       	sbiw	r24, 0x01	; 1
 4e6:	f1 f7       	brne	.-4      	; 0x4e4 <LCD_WriteChar+0x58>
 4e8:	00 c0       	rjmp	.+0      	; 0x4ea <LCD_WriteChar+0x5e>
 4ea:	00 00       	nop
 4ec:	41 e0       	ldi	r20, 0x01	; 1
 4ee:	62 e0       	ldi	r22, 0x02	; 2
 4f0:	80 e0       	ldi	r24, 0x00	; 0
 4f2:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 4f6:	8f e9       	ldi	r24, 0x9F	; 159
 4f8:	9f e0       	ldi	r25, 0x0F	; 15
 4fa:	01 97       	sbiw	r24, 0x01	; 1
 4fc:	f1 f7       	brne	.-4      	; 0x4fa <LCD_WriteChar+0x6e>
 4fe:	00 c0       	rjmp	.+0      	; 0x500 <LCD_WriteChar+0x74>
 500:	00 00       	nop
 502:	40 e0       	ldi	r20, 0x00	; 0
 504:	62 e0       	ldi	r22, 0x02	; 2
 506:	80 e0       	ldi	r24, 0x00	; 0
 508:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 50c:	8f e9       	ldi	r24, 0x9F	; 159
 50e:	9f e0       	ldi	r25, 0x0F	; 15
 510:	01 97       	sbiw	r24, 0x01	; 1
 512:	f1 f7       	brne	.-4      	; 0x510 <LCD_WriteChar+0x84>
 514:	00 c0       	rjmp	.+0      	; 0x516 <LCD_WriteChar+0x8a>
 516:	00 00       	nop
 518:	4c 2f       	mov	r20, r28
 51a:	41 70       	andi	r20, 0x01	; 1
 51c:	60 e0       	ldi	r22, 0x00	; 0
 51e:	81 e0       	ldi	r24, 0x01	; 1
 520:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 524:	c1 fb       	bst	r28, 1
 526:	44 27       	eor	r20, r20
 528:	40 f9       	bld	r20, 0
 52a:	61 e0       	ldi	r22, 0x01	; 1
 52c:	81 e0       	ldi	r24, 0x01	; 1
 52e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 532:	c2 fb       	bst	r28, 2
 534:	44 27       	eor	r20, r20
 536:	40 f9       	bld	r20, 0
 538:	62 e0       	ldi	r22, 0x02	; 2
 53a:	81 e0       	ldi	r24, 0x01	; 1
 53c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 540:	c3 fb       	bst	r28, 3
 542:	44 27       	eor	r20, r20
 544:	40 f9       	bld	r20, 0
 546:	64 e0       	ldi	r22, 0x04	; 4
 548:	81 e0       	ldi	r24, 0x01	; 1
 54a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 54e:	8f e9       	ldi	r24, 0x9F	; 159
 550:	9f e0       	ldi	r25, 0x0F	; 15
 552:	01 97       	sbiw	r24, 0x01	; 1
 554:	f1 f7       	brne	.-4      	; 0x552 <LCD_WriteChar+0xc6>
 556:	00 c0       	rjmp	.+0      	; 0x558 <LCD_WriteChar+0xcc>
 558:	00 00       	nop
 55a:	41 e0       	ldi	r20, 0x01	; 1
 55c:	62 e0       	ldi	r22, 0x02	; 2
 55e:	80 e0       	ldi	r24, 0x00	; 0
 560:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 564:	8f e9       	ldi	r24, 0x9F	; 159
 566:	9f e0       	ldi	r25, 0x0F	; 15
 568:	01 97       	sbiw	r24, 0x01	; 1
 56a:	f1 f7       	brne	.-4      	; 0x568 <LCD_WriteChar+0xdc>
 56c:	00 c0       	rjmp	.+0      	; 0x56e <LCD_WriteChar+0xe2>
 56e:	00 00       	nop
 570:	40 e0       	ldi	r20, 0x00	; 0
 572:	62 e0       	ldi	r22, 0x02	; 2
 574:	80 e0       	ldi	r24, 0x00	; 0
 576:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 57a:	8f e1       	ldi	r24, 0x1F	; 31
 57c:	9e e4       	ldi	r25, 0x4E	; 78
 57e:	01 97       	sbiw	r24, 0x01	; 1
 580:	f1 f7       	brne	.-4      	; 0x57e <LCD_WriteChar+0xf2>
 582:	00 c0       	rjmp	.+0      	; 0x584 <LCD_WriteChar+0xf8>
 584:	00 00       	nop
 586:	cf 91       	pop	r28
 588:	08 95       	ret

0000058a <LCD_WriteString>:
 58a:	0f 93       	push	r16
 58c:	1f 93       	push	r17
 58e:	cf 93       	push	r28
 590:	8c 01       	movw	r16, r24
 592:	c0 e0       	ldi	r28, 0x00	; 0
 594:	03 c0       	rjmp	.+6      	; 0x59c <LCD_WriteString+0x12>
 596:	0e 94 46 02 	call	0x48c	; 0x48c <LCD_WriteChar>
 59a:	cf 5f       	subi	r28, 0xFF	; 255
 59c:	f8 01       	movw	r30, r16
 59e:	ec 0f       	add	r30, r28
 5a0:	f1 1d       	adc	r31, r1
 5a2:	80 81       	ld	r24, Z
 5a4:	81 11       	cpse	r24, r1
 5a6:	f7 cf       	rjmp	.-18     	; 0x596 <LCD_WriteString+0xc>
 5a8:	cf 91       	pop	r28
 5aa:	1f 91       	pop	r17
 5ac:	0f 91       	pop	r16
 5ae:	08 95       	ret

000005b0 <LCD_Clear>:

void LCD_Clear(void)
{
    LCD_WriteCommand(0x01);
 5b0:	81 e0       	ldi	r24, 0x01	; 1
 5b2:	0e 94 87 01 	call	0x30e	; 0x30e <LCD_WriteCommand>
 5b6:	08 95       	ret

000005b8 <LED_Init>:


void LED_Init(void)
{

        DIO_SetPinDir(LED_GREEN_PORT,LED_GREEN_PIN,DIO_PIN_OUTPUT);
 5b8:	41 e0       	ldi	r20, 0x01	; 1
 5ba:	64 e0       	ldi	r22, 0x04	; 4
 5bc:	80 e0       	ldi	r24, 0x00	; 0
 5be:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
        DIO_SetPinDir(LED_RED_PORT,LED_RED_PIN,DIO_PIN_OUTPUT);
 5c2:	41 e0       	ldi	r20, 0x01	; 1
 5c4:	67 e0       	ldi	r22, 0x07	; 7
 5c6:	81 e0       	ldi	r24, 0x01	; 1
 5c8:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
        DIO_SetPinDir(LED_BLUE_PORT,LED_BLUE_PIN,DIO_PIN_OUTPUT);
 5cc:	41 e0       	ldi	r20, 0x01	; 1
 5ce:	65 e0       	ldi	r22, 0x05	; 5
 5d0:	80 e0       	ldi	r24, 0x00	; 0
 5d2:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
        DIO_SetPinDir(LED_YELLOW_PORT,LED_YELLOW_PIN,DIO_PIN_OUTPUT);  
 5d6:	41 e0       	ldi	r20, 0x01	; 1
 5d8:	66 e0       	ldi	r22, 0x06	; 6
 5da:	80 e0       	ldi	r24, 0x00	; 0
 5dc:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
 5e0:	08 95       	ret

000005e2 <LED_TurnOn>:
    
}
void LED_TurnOn(uint8_t led_color)
{
    switch (led_color)
 5e2:	81 30       	cpi	r24, 0x01	; 1
 5e4:	91 f0       	breq	.+36     	; 0x60a <LED_TurnOn+0x28>
 5e6:	28 f0       	brcs	.+10     	; 0x5f2 <LED_TurnOn+0x10>
 5e8:	82 30       	cpi	r24, 0x02	; 2
 5ea:	a9 f0       	breq	.+42     	; 0x616 <LED_TurnOn+0x34>
 5ec:	83 30       	cpi	r24, 0x03	; 3
 5ee:	39 f0       	breq	.+14     	; 0x5fe <LED_TurnOn+0x1c>
 5f0:	08 95       	ret
    {
        case LED_GREEN : 
            DIO_SetPinVal(LED_GREEN_PORT,LED_GREEN_PIN,DIO_PIN_HIGH);              
 5f2:	41 e0       	ldi	r20, 0x01	; 1
 5f4:	64 e0       	ldi	r22, 0x04	; 4
 5f6:	80 e0       	ldi	r24, 0x00	; 0
 5f8:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
            break;
 5fc:	08 95       	ret
       
       case LED_RED :
            DIO_SetPinVal(LED_RED_PORT,LED_RED_PIN,DIO_PIN_HIGH);
 5fe:	41 e0       	ldi	r20, 0x01	; 1
 600:	67 e0       	ldi	r22, 0x07	; 7
 602:	81 e0       	ldi	r24, 0x01	; 1
 604:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
            break;   
 608:	08 95       	ret
            
       case LED_BLUE :
           DIO_SetPinVal(LED_BLUE_PORT,LED_BLUE_PIN,DIO_PIN_HIGH);
 60a:	41 e0       	ldi	r20, 0x01	; 1
 60c:	65 e0       	ldi	r22, 0x05	; 5
 60e:	80 e0       	ldi	r24, 0x00	; 0
 610:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
           break; 
 614:	08 95       	ret
           
       case LED_YELLOW :
           DIO_SetPinVal(LED_YELLOW_PORT,LED_YELLOW_PIN,DIO_PIN_HIGH);
 616:	41 e0       	ldi	r20, 0x01	; 1
 618:	66 e0       	ldi	r22, 0x06	; 6
 61a:	80 e0       	ldi	r24, 0x00	; 0
 61c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 620:	08 95       	ret

00000622 <LED_TurnOff>:
    
}

void LED_TurnOff(uint8_t led_color)
{
    switch (led_color)
 622:	81 30       	cpi	r24, 0x01	; 1
 624:	91 f0       	breq	.+36     	; 0x64a <LED_TurnOff+0x28>
 626:	28 f0       	brcs	.+10     	; 0x632 <LED_TurnOff+0x10>
 628:	82 30       	cpi	r24, 0x02	; 2
 62a:	a9 f0       	breq	.+42     	; 0x656 <LED_TurnOff+0x34>
 62c:	83 30       	cpi	r24, 0x03	; 3
 62e:	39 f0       	breq	.+14     	; 0x63e <LED_TurnOff+0x1c>
 630:	08 95       	ret
    {
        case LED_GREEN :
            DIO_SetPinVal(LED_GREEN_PORT,LED_GREEN_PIN,DIO_PIN_LOW);
 632:	40 e0       	ldi	r20, 0x00	; 0
 634:	64 e0       	ldi	r22, 0x04	; 4
 636:	80 e0       	ldi	r24, 0x00	; 0
 638:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
            break;
 63c:	08 95       	ret
        
        case LED_RED :
            DIO_SetPinVal(LED_RED_PORT,LED_RED_PIN,DIO_PIN_LOW);
 63e:	40 e0       	ldi	r20, 0x00	; 0
 640:	67 e0       	ldi	r22, 0x07	; 7
 642:	81 e0       	ldi	r24, 0x01	; 1
 644:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
            break;
 648:	08 95       	ret
        
        case LED_BLUE :
            DIO_SetPinVal(LED_BLUE_PORT,LED_BLUE_PIN,DIO_PIN_LOW);
 64a:	40 e0       	ldi	r20, 0x00	; 0
 64c:	65 e0       	ldi	r22, 0x05	; 5
 64e:	80 e0       	ldi	r24, 0x00	; 0
 650:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
            break;
 654:	08 95       	ret
        
        case LED_YELLOW :
            DIO_SetPinVal(LED_YELLOW_PORT,LED_YELLOW_PIN,DIO_PIN_LOW);
 656:	40 e0       	ldi	r20, 0x00	; 0
 658:	66 e0       	ldi	r22, 0x06	; 6
 65a:	80 e0       	ldi	r24, 0x00	; 0
 65c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 660:	08 95       	ret

00000662 <LED_Blink_5sec>:
    
}

/*Blinks for 5 Sec*/
void LED_Blink_5sec(uint8_t led_color)
{
 662:	cf 93       	push	r28
 664:	df 93       	push	r29
    int LED_Counter=0;
        switch (led_color)
 666:	81 30       	cpi	r24, 0x01	; 1
 668:	09 f4       	brne	.+2      	; 0x66c <LED_Blink_5sec+0xa>
 66a:	59 c0       	rjmp	.+178    	; 0x71e <LED_Blink_5sec+0xbc>
 66c:	30 f0       	brcs	.+12     	; 0x67a <LED_Blink_5sec+0x18>
 66e:	82 30       	cpi	r24, 0x02	; 2
 670:	09 f4       	brne	.+2      	; 0x674 <LED_Blink_5sec+0x12>
 672:	7e c0       	rjmp	.+252    	; 0x770 <LED_Blink_5sec+0x10e>
 674:	83 30       	cpi	r24, 0x03	; 3
 676:	51 f1       	breq	.+84     	; 0x6cc <LED_Blink_5sec+0x6a>
 678:	a3 c0       	rjmp	.+326    	; 0x7c0 <LED_Blink_5sec+0x15e>
        {
            case LED_GREEN :
                DIO_SetPinDir(LED_GREEN_PORT,LED_GREEN_PIN,DIO_PIN_OUTPUT);
 67a:	41 e0       	ldi	r20, 0x01	; 1
 67c:	64 e0       	ldi	r22, 0x04	; 4
 67e:	80 e0       	ldi	r24, 0x00	; 0
 680:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
                
                for (LED_Counter = 0 ; LED_Counter<LED_5sec_Count ; ++LED_Counter)
 684:	c0 e0       	ldi	r28, 0x00	; 0
 686:	d0 e0       	ldi	r29, 0x00	; 0
 688:	1d c0       	rjmp	.+58     	; 0x6c4 <LED_Blink_5sec+0x62>
                {
                    DIO_SetPinVal(LED_GREEN_PORT,LED_GREEN_PIN,DIO_PIN_HIGH);
 68a:	41 e0       	ldi	r20, 0x01	; 1
 68c:	64 e0       	ldi	r22, 0x04	; 4
 68e:	80 e0       	ldi	r24, 0x00	; 0
 690:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 694:	2f ef       	ldi	r18, 0xFF	; 255
 696:	83 ec       	ldi	r24, 0xC3	; 195
 698:	99 e0       	ldi	r25, 0x09	; 9
 69a:	21 50       	subi	r18, 0x01	; 1
 69c:	80 40       	sbci	r24, 0x00	; 0
 69e:	90 40       	sbci	r25, 0x00	; 0
 6a0:	e1 f7       	brne	.-8      	; 0x69a <LED_Blink_5sec+0x38>
 6a2:	00 c0       	rjmp	.+0      	; 0x6a4 <LED_Blink_5sec+0x42>
 6a4:	00 00       	nop
                    _delay_ms(LED_BLINK_TIME);
                    DIO_SetPinVal(LED_GREEN_PORT,LED_GREEN_PIN,DIO_PIN_LOW);
 6a6:	40 e0       	ldi	r20, 0x00	; 0
 6a8:	64 e0       	ldi	r22, 0x04	; 4
 6aa:	80 e0       	ldi	r24, 0x00	; 0
 6ac:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 6b0:	2f ef       	ldi	r18, 0xFF	; 255
 6b2:	83 ec       	ldi	r24, 0xC3	; 195
 6b4:	99 e0       	ldi	r25, 0x09	; 9
 6b6:	21 50       	subi	r18, 0x01	; 1
 6b8:	80 40       	sbci	r24, 0x00	; 0
 6ba:	90 40       	sbci	r25, 0x00	; 0
 6bc:	e1 f7       	brne	.-8      	; 0x6b6 <LED_Blink_5sec+0x54>
 6be:	00 c0       	rjmp	.+0      	; 0x6c0 <LED_Blink_5sec+0x5e>
 6c0:	00 00       	nop
        switch (led_color)
        {
            case LED_GREEN :
                DIO_SetPinDir(LED_GREEN_PORT,LED_GREEN_PIN,DIO_PIN_OUTPUT);
                
                for (LED_Counter = 0 ; LED_Counter<LED_5sec_Count ; ++LED_Counter)
 6c2:	21 96       	adiw	r28, 0x01	; 1
 6c4:	cc 30       	cpi	r28, 0x0C	; 12
 6c6:	d1 05       	cpc	r29, r1
 6c8:	04 f3       	brlt	.-64     	; 0x68a <LED_Blink_5sec+0x28>
 6ca:	7a c0       	rjmp	.+244    	; 0x7c0 <LED_Blink_5sec+0x15e>
                    _delay_ms(LED_BLINK_TIME);
                }
                break;
            
            case LED_RED :
                DIO_SetPinDir(LED_RED_PORT,LED_RED_PIN,DIO_PIN_OUTPUT);
 6cc:	41 e0       	ldi	r20, 0x01	; 1
 6ce:	67 e0       	ldi	r22, 0x07	; 7
 6d0:	81 e0       	ldi	r24, 0x01	; 1
 6d2:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
                
                for (LED_Counter = 0 ; LED_Counter<LED_5sec_Count ; ++LED_Counter)
 6d6:	c0 e0       	ldi	r28, 0x00	; 0
 6d8:	d0 e0       	ldi	r29, 0x00	; 0
 6da:	1d c0       	rjmp	.+58     	; 0x716 <LED_Blink_5sec+0xb4>
                {
                    DIO_SetPinVal(LED_RED_PORT,LED_RED_PIN,DIO_PIN_HIGH);
 6dc:	41 e0       	ldi	r20, 0x01	; 1
 6de:	67 e0       	ldi	r22, 0x07	; 7
 6e0:	81 e0       	ldi	r24, 0x01	; 1
 6e2:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 6e6:	2f ef       	ldi	r18, 0xFF	; 255
 6e8:	83 ec       	ldi	r24, 0xC3	; 195
 6ea:	99 e0       	ldi	r25, 0x09	; 9
 6ec:	21 50       	subi	r18, 0x01	; 1
 6ee:	80 40       	sbci	r24, 0x00	; 0
 6f0:	90 40       	sbci	r25, 0x00	; 0
 6f2:	e1 f7       	brne	.-8      	; 0x6ec <LED_Blink_5sec+0x8a>
 6f4:	00 c0       	rjmp	.+0      	; 0x6f6 <LED_Blink_5sec+0x94>
 6f6:	00 00       	nop
                    _delay_ms(LED_BLINK_TIME);
                    DIO_SetPinVal(LED_RED_PORT,LED_RED_PIN,DIO_PIN_LOW);
 6f8:	40 e0       	ldi	r20, 0x00	; 0
 6fa:	67 e0       	ldi	r22, 0x07	; 7
 6fc:	81 e0       	ldi	r24, 0x01	; 1
 6fe:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 702:	2f ef       	ldi	r18, 0xFF	; 255
 704:	83 ec       	ldi	r24, 0xC3	; 195
 706:	99 e0       	ldi	r25, 0x09	; 9
 708:	21 50       	subi	r18, 0x01	; 1
 70a:	80 40       	sbci	r24, 0x00	; 0
 70c:	90 40       	sbci	r25, 0x00	; 0
 70e:	e1 f7       	brne	.-8      	; 0x708 <LED_Blink_5sec+0xa6>
 710:	00 c0       	rjmp	.+0      	; 0x712 <LED_Blink_5sec+0xb0>
 712:	00 00       	nop
                break;
            
            case LED_RED :
                DIO_SetPinDir(LED_RED_PORT,LED_RED_PIN,DIO_PIN_OUTPUT);
                
                for (LED_Counter = 0 ; LED_Counter<LED_5sec_Count ; ++LED_Counter)
 714:	21 96       	adiw	r28, 0x01	; 1
 716:	cc 30       	cpi	r28, 0x0C	; 12
 718:	d1 05       	cpc	r29, r1
 71a:	04 f3       	brlt	.-64     	; 0x6dc <LED_Blink_5sec+0x7a>
 71c:	51 c0       	rjmp	.+162    	; 0x7c0 <LED_Blink_5sec+0x15e>
                    _delay_ms(LED_BLINK_TIME);
                }
                break;
            
            case LED_BLUE :
                DIO_SetPinDir(LED_BLUE_PORT,LED_BLUE_PIN,DIO_PIN_OUTPUT);
 71e:	41 e0       	ldi	r20, 0x01	; 1
 720:	65 e0       	ldi	r22, 0x05	; 5
 722:	80 e0       	ldi	r24, 0x00	; 0
 724:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
                for (LED_Counter = 0 ; LED_Counter<LED_5sec_Count ; ++LED_Counter)
 728:	c0 e0       	ldi	r28, 0x00	; 0
 72a:	d0 e0       	ldi	r29, 0x00	; 0
 72c:	1d c0       	rjmp	.+58     	; 0x768 <LED_Blink_5sec+0x106>
                {
                    DIO_SetPinVal(LED_BLUE_PORT,LED_BLUE_PIN,DIO_PIN_HIGH);
 72e:	41 e0       	ldi	r20, 0x01	; 1
 730:	65 e0       	ldi	r22, 0x05	; 5
 732:	80 e0       	ldi	r24, 0x00	; 0
 734:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 738:	2f ef       	ldi	r18, 0xFF	; 255
 73a:	83 ec       	ldi	r24, 0xC3	; 195
 73c:	99 e0       	ldi	r25, 0x09	; 9
 73e:	21 50       	subi	r18, 0x01	; 1
 740:	80 40       	sbci	r24, 0x00	; 0
 742:	90 40       	sbci	r25, 0x00	; 0
 744:	e1 f7       	brne	.-8      	; 0x73e <LED_Blink_5sec+0xdc>
 746:	00 c0       	rjmp	.+0      	; 0x748 <LED_Blink_5sec+0xe6>
 748:	00 00       	nop
                    _delay_ms(LED_BLINK_TIME);
                    DIO_SetPinVal(LED_BLUE_PORT,LED_BLUE_PIN,DIO_PIN_LOW);
 74a:	40 e0       	ldi	r20, 0x00	; 0
 74c:	65 e0       	ldi	r22, 0x05	; 5
 74e:	80 e0       	ldi	r24, 0x00	; 0
 750:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 754:	2f ef       	ldi	r18, 0xFF	; 255
 756:	83 ec       	ldi	r24, 0xC3	; 195
 758:	99 e0       	ldi	r25, 0x09	; 9
 75a:	21 50       	subi	r18, 0x01	; 1
 75c:	80 40       	sbci	r24, 0x00	; 0
 75e:	90 40       	sbci	r25, 0x00	; 0
 760:	e1 f7       	brne	.-8      	; 0x75a <LED_Blink_5sec+0xf8>
 762:	00 c0       	rjmp	.+0      	; 0x764 <LED_Blink_5sec+0x102>
 764:	00 00       	nop
                }
                break;
            
            case LED_BLUE :
                DIO_SetPinDir(LED_BLUE_PORT,LED_BLUE_PIN,DIO_PIN_OUTPUT);
                for (LED_Counter = 0 ; LED_Counter<LED_5sec_Count ; ++LED_Counter)
 766:	21 96       	adiw	r28, 0x01	; 1
 768:	cc 30       	cpi	r28, 0x0C	; 12
 76a:	d1 05       	cpc	r29, r1
 76c:	04 f3       	brlt	.-64     	; 0x72e <LED_Blink_5sec+0xcc>
 76e:	28 c0       	rjmp	.+80     	; 0x7c0 <LED_Blink_5sec+0x15e>
                }
                break;

            
            case LED_YELLOW :
                DIO_SetPinDir(LED_YELLOW_PORT,LED_YELLOW_PIN,DIO_PIN_OUTPUT);
 770:	41 e0       	ldi	r20, 0x01	; 1
 772:	66 e0       	ldi	r22, 0x06	; 6
 774:	80 e0       	ldi	r24, 0x00	; 0
 776:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SetPinDir>
                
                for (LED_Counter = 0 ; LED_Counter<LED_5sec_Count ; ++LED_Counter)
 77a:	c0 e0       	ldi	r28, 0x00	; 0
 77c:	d0 e0       	ldi	r29, 0x00	; 0
 77e:	1d c0       	rjmp	.+58     	; 0x7ba <LED_Blink_5sec+0x158>
                {
                    DIO_SetPinVal(LED_YELLOW_PORT,LED_YELLOW_PIN,DIO_PIN_HIGH);
 780:	41 e0       	ldi	r20, 0x01	; 1
 782:	66 e0       	ldi	r22, 0x06	; 6
 784:	80 e0       	ldi	r24, 0x00	; 0
 786:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 78a:	2f ef       	ldi	r18, 0xFF	; 255
 78c:	83 ec       	ldi	r24, 0xC3	; 195
 78e:	99 e0       	ldi	r25, 0x09	; 9
 790:	21 50       	subi	r18, 0x01	; 1
 792:	80 40       	sbci	r24, 0x00	; 0
 794:	90 40       	sbci	r25, 0x00	; 0
 796:	e1 f7       	brne	.-8      	; 0x790 <LED_Blink_5sec+0x12e>
 798:	00 c0       	rjmp	.+0      	; 0x79a <LED_Blink_5sec+0x138>
 79a:	00 00       	nop
                    _delay_ms(LED_BLINK_TIME);
                    DIO_SetPinVal(LED_YELLOW_PORT,LED_YELLOW_PIN,DIO_PIN_LOW);
 79c:	40 e0       	ldi	r20, 0x00	; 0
 79e:	66 e0       	ldi	r22, 0x06	; 6
 7a0:	80 e0       	ldi	r24, 0x00	; 0
 7a2:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DIO_SetPinVal>
 7a6:	2f ef       	ldi	r18, 0xFF	; 255
 7a8:	83 ec       	ldi	r24, 0xC3	; 195
 7aa:	99 e0       	ldi	r25, 0x09	; 9
 7ac:	21 50       	subi	r18, 0x01	; 1
 7ae:	80 40       	sbci	r24, 0x00	; 0
 7b0:	90 40       	sbci	r25, 0x00	; 0
 7b2:	e1 f7       	brne	.-8      	; 0x7ac <LED_Blink_5sec+0x14a>
 7b4:	00 c0       	rjmp	.+0      	; 0x7b6 <LED_Blink_5sec+0x154>
 7b6:	00 00       	nop

            
            case LED_YELLOW :
                DIO_SetPinDir(LED_YELLOW_PORT,LED_YELLOW_PIN,DIO_PIN_OUTPUT);
                
                for (LED_Counter = 0 ; LED_Counter<LED_5sec_Count ; ++LED_Counter)
 7b8:	21 96       	adiw	r28, 0x01	; 1
 7ba:	cc 30       	cpi	r28, 0x0C	; 12
 7bc:	d1 05       	cpc	r29, r1
 7be:	04 f3       	brlt	.-64     	; 0x780 <LED_Blink_5sec+0x11e>
                break;            
            
        }
        
  
 7c0:	df 91       	pop	r29
 7c2:	cf 91       	pop	r28
 7c4:	08 95       	ret

000007c6 <main>:
#include <avr/interrupt.h>

int main(void)
{
        
    traffic_light_Init();
 7c6:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <traffic_light_Init>

    while (1)
    {
        traffic_light_Runnable();
 7ca:	0e 94 75 04 	call	0x8ea	; 0x8ea <traffic_light_Runnable>
 7ce:	fd cf       	rjmp	.-6      	; 0x7ca <main+0x4>

000007d0 <traffic_light_Init>:
volatile long long  i;
volatile long long j =1000000;
void traffic_light_Init(void)
{

	SET_GlobalInterrupt();
 7d0:	0e 94 53 01 	call	0x2a6	; 0x2a6 <SET_GlobalInterrupt>

	EXTERNAL_INT1_Init();
 7d4:	0e 94 57 01 	call	0x2ae	; 0x2ae <EXTERNAL_INT1_Init>
	EXI_SetCallBack(Button_Pressed);
 7d8:	87 e5       	ldi	r24, 0x57	; 87
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	0e 94 52 01 	call	0x2a4	; 0x2a4 <EXI_SetCallBack>
	LCD_Init();
 7e0:	0e 94 06 02 	call	0x40c	; 0x40c <LCD_Init>
	LED_Init();
 7e4:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <LED_Init>
	Button_Init(DIO_PORTD, DIO_PIN3);
 7e8:	63 e0       	ldi	r22, 0x03	; 3
 7ea:	83 e0       	ldi	r24, 0x03	; 3
 7ec:	0e 94 49 00 	call	0x92	; 0x92 <Button_Init>
 7f0:	08 95       	ret

000007f2 <Delay_5sec>:
		}
	}
}
	
	void Delay_5sec(void)
	{
 7f2:	af 92       	push	r10
 7f4:	bf 92       	push	r11
 7f6:	cf 92       	push	r12
 7f8:	df 92       	push	r13
 7fa:	ef 92       	push	r14
 7fc:	ff 92       	push	r15
 7fe:	0f 93       	push	r16
 800:	1f 93       	push	r17
		for(i=0;i<j;i++);
 802:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__data_end>
 806:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__data_end+0x1>
 80a:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__data_end+0x2>
 80e:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <__data_end+0x3>
 812:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <__data_end+0x4>
 816:	10 92 7f 00 	sts	0x007F, r1	; 0x80007f <__data_end+0x5>
 81a:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__data_end+0x6>
 81e:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__data_end+0x7>
 822:	23 c0       	rjmp	.+70     	; 0x86a <__stack+0xb>
 824:	20 91 7a 00 	lds	r18, 0x007A	; 0x80007a <__data_end>
 828:	30 91 7b 00 	lds	r19, 0x007B	; 0x80007b <__data_end+0x1>
 82c:	40 91 7c 00 	lds	r20, 0x007C	; 0x80007c <__data_end+0x2>
 830:	50 91 7d 00 	lds	r21, 0x007D	; 0x80007d <__data_end+0x3>
 834:	60 91 7e 00 	lds	r22, 0x007E	; 0x80007e <__data_end+0x4>
 838:	70 91 7f 00 	lds	r23, 0x007F	; 0x80007f <__data_end+0x5>
 83c:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__data_end+0x6>
 840:	90 91 81 00 	lds	r25, 0x0081	; 0x800081 <__data_end+0x7>
 844:	a1 e0       	ldi	r26, 0x01	; 1
 846:	0e 94 df 04 	call	0x9be	; 0x9be <__adddi3_s8>
 84a:	20 93 7a 00 	sts	0x007A, r18	; 0x80007a <__data_end>
 84e:	30 93 7b 00 	sts	0x007B, r19	; 0x80007b <__data_end+0x1>
 852:	40 93 7c 00 	sts	0x007C, r20	; 0x80007c <__data_end+0x2>
 856:	50 93 7d 00 	sts	0x007D, r21	; 0x80007d <__data_end+0x3>
 85a:	60 93 7e 00 	sts	0x007E, r22	; 0x80007e <__data_end+0x4>
 85e:	70 93 7f 00 	sts	0x007F, r23	; 0x80007f <__data_end+0x5>
 862:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__data_end+0x6>
 866:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__data_end+0x7>
 86a:	20 91 7a 00 	lds	r18, 0x007A	; 0x80007a <__data_end>
 86e:	30 91 7b 00 	lds	r19, 0x007B	; 0x80007b <__data_end+0x1>
 872:	40 91 7c 00 	lds	r20, 0x007C	; 0x80007c <__data_end+0x2>
 876:	50 91 7d 00 	lds	r21, 0x007D	; 0x80007d <__data_end+0x3>
 87a:	60 91 7e 00 	lds	r22, 0x007E	; 0x80007e <__data_end+0x4>
 87e:	70 91 7f 00 	lds	r23, 0x007F	; 0x80007f <__data_end+0x5>
 882:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__data_end+0x6>
 886:	90 91 81 00 	lds	r25, 0x0081	; 0x800081 <__data_end+0x7>
 88a:	a0 90 60 00 	lds	r10, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 88e:	b0 90 61 00 	lds	r11, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 892:	c0 90 62 00 	lds	r12, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 896:	d0 90 63 00 	lds	r13, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 89a:	e0 90 64 00 	lds	r14, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 89e:	f0 90 65 00 	lds	r15, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 8a2:	00 91 66 00 	lds	r16, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 8a6:	10 91 67 00 	lds	r17, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 8aa:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__cmpdi2>
 8ae:	0c f4       	brge	.+2      	; 0x8b2 <__stack+0x53>
 8b0:	b9 cf       	rjmp	.-142    	; 0x824 <__DATA_REGION_LENGTH__+0x24>
        j=1000000;
 8b2:	80 e4       	ldi	r24, 0x40	; 64
 8b4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 8b8:	82 e4       	ldi	r24, 0x42	; 66
 8ba:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 8be:	8f e0       	ldi	r24, 0x0F	; 15
 8c0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 8c4:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 8c8:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 8cc:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 8d0:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 8d4:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>

	}
 8d8:	1f 91       	pop	r17
 8da:	0f 91       	pop	r16
 8dc:	ff 90       	pop	r15
 8de:	ef 90       	pop	r14
 8e0:	df 90       	pop	r13
 8e2:	cf 90       	pop	r12
 8e4:	bf 90       	pop	r11
 8e6:	af 90       	pop	r10
 8e8:	08 95       	ret

000008ea <traffic_light_Runnable>:
	LED_Init();
	Button_Init(DIO_PORTD, DIO_PIN3);
}
void traffic_light_Runnable(void)
{
    LCD_Clear();
 8ea:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <LCD_Clear>
	LCD_WriteString("Cars");
 8ee:	89 e6       	ldi	r24, 0x69	; 105
 8f0:	90 e0       	ldi	r25, 0x00	; 0
 8f2:	0e 94 c5 02 	call	0x58a	; 0x58a <LCD_WriteString>
	LED_TurnOn(LED_GREEN);
 8f6:	80 e0       	ldi	r24, 0x00	; 0
 8f8:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <LED_TurnOn>
	// forloop
	Delay_5sec();
 8fc:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <Delay_5sec>
	//_delay_ms(5000);
	LED_TurnOff(LED_GREEN);
 900:	80 e0       	ldi	r24, 0x00	; 0
 902:	0e 94 11 03 	call	0x622	; 0x622 <LED_TurnOff>

	LED_Blink_5sec(LED_YELLOW);
 906:	82 e0       	ldi	r24, 0x02	; 2
 908:	0e 94 31 03 	call	0x662	; 0x662 <LED_Blink_5sec>
    j=1000000;
 90c:	80 e4       	ldi	r24, 0x40	; 64
 90e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 912:	82 e4       	ldi	r24, 0x42	; 66
 914:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 918:	8f e0       	ldi	r24, 0x0F	; 15
 91a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 91e:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 922:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 926:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 92a:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 92e:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
	LED_TurnOn(LED_RED);
 932:	83 e0       	ldi	r24, 0x03	; 3
 934:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <LED_TurnOn>
	if (mode == Pedestrian)
 938:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <mode>
 93c:	88 30       	cpi	r24, 0x08	; 8
 93e:	b9 f4       	brne	.+46     	; 0x96e <traffic_light_Runnable+0x84>
	{
		LCD_Clear();
 940:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <LCD_Clear>
        LCD_Clear();
 944:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <LCD_Clear>
		LCD_WriteString("Pedestrian");
 948:	8e e6       	ldi	r24, 0x6E	; 110
 94a:	90 e0       	ldi	r25, 0x00	; 0
 94c:	0e 94 c5 02 	call	0x58a	; 0x58a <LCD_WriteString>
		LED_TurnOn(LED_BLUE);
 950:	81 e0       	ldi	r24, 0x01	; 1
 952:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <LED_TurnOn>
		Delay_5sec();
 956:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <Delay_5sec>
		//_delay_ms(5000);
        	
		mode = CAR;
 95a:	85 e0       	ldi	r24, 0x05	; 5
 95c:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <mode>
		LED_TurnOff(LED_RED);
 960:	83 e0       	ldi	r24, 0x03	; 3
 962:	0e 94 11 03 	call	0x622	; 0x622 <LED_TurnOff>
		LED_TurnOff(LED_BLUE);
 966:	81 e0       	ldi	r24, 0x01	; 1
 968:	0e 94 11 03 	call	0x622	; 0x622 <LED_TurnOff>
 96c:	08 95       	ret
	}
	else
	{
		Delay_5sec();
 96e:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <Delay_5sec>
        
        //_delay_ms(5000);
		LED_TurnOff(LED_RED);
 972:	83 e0       	ldi	r24, 0x03	; 3
 974:	0e 94 11 03 	call	0x622	; 0x622 <LED_TurnOff>
        	
		if (mode == Pedestrian)
 978:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <mode>
 97c:	88 30       	cpi	r24, 0x08	; 8
 97e:	f1 f4       	brne	.+60     	; 0x9bc <traffic_light_Runnable+0xd2>
		{
			LCD_Clear();
 980:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <LCD_Clear>
			LCD_WriteString("Pedestrian");
 984:	8e e6       	ldi	r24, 0x6E	; 110
 986:	90 e0       	ldi	r25, 0x00	; 0
 988:	0e 94 c5 02 	call	0x58a	; 0x58a <LCD_WriteString>
			LED_TurnOn(LED_RED);
 98c:	83 e0       	ldi	r24, 0x03	; 3
 98e:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <LED_TurnOn>
			LED_TurnOn(LED_BLUE);
 992:	81 e0       	ldi	r24, 0x01	; 1
 994:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <LED_TurnOn>
 998:	2f ef       	ldi	r18, 0xFF	; 255
 99a:	83 e2       	ldi	r24, 0x23	; 35
 99c:	94 ef       	ldi	r25, 0xF4	; 244
 99e:	21 50       	subi	r18, 0x01	; 1
 9a0:	80 40       	sbci	r24, 0x00	; 0
 9a2:	90 40       	sbci	r25, 0x00	; 0
 9a4:	e1 f7       	brne	.-8      	; 0x99e <traffic_light_Runnable+0xb4>
 9a6:	00 c0       	rjmp	.+0      	; 0x9a8 <traffic_light_Runnable+0xbe>
 9a8:	00 00       	nop
			_delay_ms(5000);

			LED_TurnOff(LED_RED);
 9aa:	83 e0       	ldi	r24, 0x03	; 3
 9ac:	0e 94 11 03 	call	0x622	; 0x622 <LED_TurnOff>
			LED_TurnOff(LED_BLUE);
 9b0:	81 e0       	ldi	r24, 0x01	; 1
 9b2:	0e 94 11 03 	call	0x622	; 0x622 <LED_TurnOff>
			mode = CAR;
 9b6:	85 e0       	ldi	r24, 0x05	; 5
 9b8:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <mode>
 9bc:	08 95       	ret

000009be <__adddi3_s8>:
 9be:	00 24       	eor	r0, r0
 9c0:	a7 fd       	sbrc	r26, 7
 9c2:	00 94       	com	r0
 9c4:	2a 0f       	add	r18, r26
 9c6:	30 1d       	adc	r19, r0
 9c8:	40 1d       	adc	r20, r0
 9ca:	50 1d       	adc	r21, r0
 9cc:	60 1d       	adc	r22, r0
 9ce:	70 1d       	adc	r23, r0
 9d0:	80 1d       	adc	r24, r0
 9d2:	90 1d       	adc	r25, r0
 9d4:	08 95       	ret

000009d6 <__cmpdi2>:
 9d6:	2a 15       	cp	r18, r10
 9d8:	3b 05       	cpc	r19, r11
 9da:	4c 05       	cpc	r20, r12
 9dc:	5d 05       	cpc	r21, r13
 9de:	6e 05       	cpc	r22, r14
 9e0:	7f 05       	cpc	r23, r15
 9e2:	80 07       	cpc	r24, r16
 9e4:	91 07       	cpc	r25, r17
 9e6:	08 95       	ret

000009e8 <_exit>:
 9e8:	f8 94       	cli

000009ea <__stop_program>:
 9ea:	ff cf       	rjmp	.-2      	; 0x9ea <__stop_program>
